//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CallOut_Gateway.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DispatchedIncident", Namespace="http://schemas.datacontract.org/2004/07/gCAD.Shared.IntegrationContract")]
    [System.SerializableAttribute()]
    public partial class DispatchedIncident : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlarmLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallOut_Gateway.ServiceReference2.Address IncidentLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallOut_Gateway.ServiceReference2.DispatchedUnit[] ListOfUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlarmLevel {
            get {
                return this.AlarmLevelField;
            }
            set {
                if ((this.AlarmLevelField.Equals(value) != true)) {
                    this.AlarmLevelField = value;
                    this.RaisePropertyChanged("AlarmLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallOut_Gateway.ServiceReference2.Address IncidentLocation {
            get {
                return this.IncidentLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentLocationField, value) != true)) {
                    this.IncidentLocationField = value;
                    this.RaisePropertyChanged("IncidentLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentNumber {
            get {
                return this.IncidentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentNumberField, value) != true)) {
                    this.IncidentNumberField = value;
                    this.RaisePropertyChanged("IncidentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentTitle {
            get {
                return this.IncidentTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentTitleField, value) != true)) {
                    this.IncidentTitleField = value;
                    this.RaisePropertyChanged("IncidentTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentType {
            get {
                return this.IncidentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentTypeField, value) != true)) {
                    this.IncidentTypeField = value;
                    this.RaisePropertyChanged("IncidentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallOut_Gateway.ServiceReference2.DispatchedUnit[] ListOfUnits {
            get {
                return this.ListOfUnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListOfUnitsField, value) != true)) {
                    this.ListOfUnitsField = value;
                    this.RaisePropertyChanged("ListOfUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/gCAD.Shared.IntegrationContract")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DispatchedUnit", Namespace="http://schemas.datacontract.org/2004/07/gCAD.Shared.IntegrationContract")]
    [System.SerializableAttribute()]
    public partial class DispatchedUnit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentStationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeStationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallSign {
            get {
                return this.CallSignField;
            }
            set {
                if ((object.ReferenceEquals(this.CallSignField, value) != true)) {
                    this.CallSignField = value;
                    this.RaisePropertyChanged("CallSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentStation {
            get {
                return this.CurrentStationField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentStationField, value) != true)) {
                    this.CurrentStationField = value;
                    this.RaisePropertyChanged("CurrentStation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeStation {
            get {
                return this.HomeStationField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeStationField, value) != true)) {
                    this.HomeStationField = value;
                    this.RaisePropertyChanged("HomeStation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitType {
            get {
                return this.UnitTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitTypeField, value) != true)) {
                    this.UnitTypeField = value;
                    this.RaisePropertyChanged("UnitType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CADIncidentAck", Namespace="http://schemas.datacontract.org/2004/07/CallOut_CADServiceLib.Class")]
    [System.SerializableAttribute()]
    public partial class CADIncidentAck : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AckNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AckTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AckTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallOut_Gateway.ServiceReference2.Tracking[] AckTrackingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodingIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AckNo {
            get {
                return this.AckNoField;
            }
            set {
                if ((this.AckNoField.Equals(value) != true)) {
                    this.AckNoField = value;
                    this.RaisePropertyChanged("AckNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AckTimeStamp {
            get {
                return this.AckTimeStampField;
            }
            set {
                if ((this.AckTimeStampField.Equals(value) != true)) {
                    this.AckTimeStampField = value;
                    this.RaisePropertyChanged("AckTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AckTotal {
            get {
                return this.AckTotalField;
            }
            set {
                if ((this.AckTotalField.Equals(value) != true)) {
                    this.AckTotalField = value;
                    this.RaisePropertyChanged("AckTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallOut_Gateway.ServiceReference2.Tracking[] AckTracking {
            get {
                return this.AckTrackingField;
            }
            set {
                if ((object.ReferenceEquals(this.AckTrackingField, value) != true)) {
                    this.AckTrackingField = value;
                    this.RaisePropertyChanged("AckTracking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodingID {
            get {
                return this.CodingIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CodingIDField, value) != true)) {
                    this.CodingIDField = value;
                    this.RaisePropertyChanged("CodingID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tracking", Namespace="http://schemas.datacontract.org/2004/07/CallOut_CADServiceLib.Class")]
    [System.SerializableAttribute()]
    public partial class Tracking : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] UnitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Station {
            get {
                return this.StationField;
            }
            set {
                if ((object.ReferenceEquals(this.StationField, value) != true)) {
                    this.StationField = value;
                    this.RaisePropertyChanged("Station");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CADIncidentCodingStatus", Namespace="http://schemas.datacontract.org/2004/07/CallOut_CADServiceLib.Class")]
    [System.SerializableAttribute()]
    public partial class CADIncidentCodingStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AckFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AckNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AckStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AckTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AckTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallOut_Gateway.ServiceReference2.Tracking AckTrackingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodingIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AckFrom {
            get {
                return this.AckFromField;
            }
            set {
                if ((object.ReferenceEquals(this.AckFromField, value) != true)) {
                    this.AckFromField = value;
                    this.RaisePropertyChanged("AckFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AckNo {
            get {
                return this.AckNoField;
            }
            set {
                if ((this.AckNoField.Equals(value) != true)) {
                    this.AckNoField = value;
                    this.RaisePropertyChanged("AckNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AckStatus {
            get {
                return this.AckStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AckStatusField, value) != true)) {
                    this.AckStatusField = value;
                    this.RaisePropertyChanged("AckStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AckTimeStamp {
            get {
                return this.AckTimeStampField;
            }
            set {
                if ((this.AckTimeStampField.Equals(value) != true)) {
                    this.AckTimeStampField = value;
                    this.RaisePropertyChanged("AckTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AckTotal {
            get {
                return this.AckTotalField;
            }
            set {
                if ((this.AckTotalField.Equals(value) != true)) {
                    this.AckTotalField = value;
                    this.RaisePropertyChanged("AckTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallOut_Gateway.ServiceReference2.Tracking AckTracking {
            get {
                return this.AckTrackingField;
            }
            set {
                if ((object.ReferenceEquals(this.AckTrackingField, value) != true)) {
                    this.AckTrackingField = value;
                    this.RaisePropertyChanged("AckTracking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodingID {
            get {
                return this.CodingIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CodingIDField, value) != true)) {
                    this.CodingIDField = value;
                    this.RaisePropertyChanged("CodingID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="CallOut_CADServiceLib", ConfigurationName="ServiceReference2.CallOut_CADService", CallbackContract=typeof(CallOut_Gateway.ServiceReference2.CallOut_CADServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface CallOut_CADService {
        
        [System.ServiceModel.OperationContractAttribute(Action="CallOut_CADServiceLib/CallOut_CADService/CADJoin", ReplyAction="CallOut_CADServiceLib/CallOut_CADService/CADJoinResponse")]
        void CADJoin();
        
        [System.ServiceModel.OperationContractAttribute(Action="CallOut_CADServiceLib/CallOut_CADService/CADJoin", ReplyAction="CallOut_CADServiceLib/CallOut_CADService/CADJoinResponse")]
        System.Threading.Tasks.Task CADJoinAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="CallOut_CADServiceLib/CallOut_CADService/CADLeave", ReplyAction="CallOut_CADServiceLib/CallOut_CADService/CADLeaveResponse")]
        void CADLeave();
        
        [System.ServiceModel.OperationContractAttribute(Action="CallOut_CADServiceLib/CallOut_CADService/CADLeave", ReplyAction="CallOut_CADServiceLib/CallOut_CADService/CADLeaveResponse")]
        System.Threading.Tasks.Task CADLeaveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="CallOut_CADServiceLib/CallOut_CADService/GatewayJoin", ReplyAction="CallOut_CADServiceLib/CallOut_CADService/GatewayJoinResponse")]
        void GatewayJoin();
        
        [System.ServiceModel.OperationContractAttribute(Action="CallOut_CADServiceLib/CallOut_CADService/GatewayJoin", ReplyAction="CallOut_CADServiceLib/CallOut_CADService/GatewayJoinResponse")]
        System.Threading.Tasks.Task GatewayJoinAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="CallOut_CADServiceLib/CallOut_CADService/GatewayLeave", ReplyAction="CallOut_CADServiceLib/CallOut_CADService/GatewayLeaveResponse")]
        void GatewayLeave();
        
        [System.ServiceModel.OperationContractAttribute(Action="CallOut_CADServiceLib/CallOut_CADService/GatewayLeave", ReplyAction="CallOut_CADServiceLib/CallOut_CADService/GatewayLeaveResponse")]
        System.Threading.Tasks.Task GatewayLeaveAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/SendCADIncidentMsg")]
        void SendCADIncidentMsg(CallOut_Gateway.ServiceReference2.DispatchedIncident CADincidentmsg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/SendCADIncidentMsg")]
        System.Threading.Tasks.Task SendCADIncidentMsgAsync(CallOut_Gateway.ServiceReference2.DispatchedIncident CADincidentmsg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/AckCADIncidentMsg")]
        void AckCADIncidentMsg(CallOut_Gateway.ServiceReference2.CADIncidentAck CADincidentack);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/AckCADIncidentMsg")]
        System.Threading.Tasks.Task AckCADIncidentMsgAsync(CallOut_Gateway.ServiceReference2.CADIncidentAck CADincidentack);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/BroadcastIncidentCodingStatus")]
        void BroadcastIncidentCodingStatus(CallOut_Gateway.ServiceReference2.CADIncidentCodingStatus incidentcodingstatus);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/BroadcastIncidentCodingStatus")]
        System.Threading.Tasks.Task BroadcastIncidentCodingStatusAsync(CallOut_Gateway.ServiceReference2.CADIncidentCodingStatus incidentcodingstatus);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/IncidentCodingStatusQuery")]
        void IncidentCodingStatusQuery(string querycodingID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/IncidentCodingStatusQuery")]
        System.Threading.Tasks.Task IncidentCodingStatusQueryAsync(string querycodingID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/IncidentCodingStatusResponse")]
        void IncidentCodingStatusResponse(CallOut_Gateway.ServiceReference2.CADIncidentAck codingstatusresponse);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/IncidentCodingStatusResponse")]
        System.Threading.Tasks.Task IncidentCodingStatusResponseAsync(CallOut_Gateway.ServiceReference2.CADIncidentAck codingstatusresponse);
        
        [System.ServiceModel.OperationContractAttribute(Action="CallOut_CADServiceLib/CallOut_CADService/IncidentDispatched", ReplyAction="CallOut_CADServiceLib/CallOut_CADService/IncidentDispatchedResponse")]
        void IncidentDispatched(CallOut_Gateway.ServiceReference2.DispatchedIncident incident);
        
        [System.ServiceModel.OperationContractAttribute(Action="CallOut_CADServiceLib/CallOut_CADService/IncidentDispatched", ReplyAction="CallOut_CADServiceLib/CallOut_CADService/IncidentDispatchedResponse")]
        System.Threading.Tasks.Task IncidentDispatchedAsync(CallOut_Gateway.ServiceReference2.DispatchedIncident incident);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CallOut_CADServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/RcvCADIncidentMsg")]
        void RcvCADIncidentMsg(CallOut_Gateway.ServiceReference2.DispatchedIncident CADincidentMsg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/UpdateCADIncidentAck")]
        void UpdateCADIncidentAck(CallOut_Gateway.ServiceReference2.CADIncidentAck CADincidentack);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/UpdateIncidentCodingStatus")]
        void UpdateIncidentCodingStatus(CallOut_Gateway.ServiceReference2.CADIncidentCodingStatus incidentcodingstatus);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/IncidentCodingStatus")]
        void IncidentCodingStatus(string querycodingID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="CallOut_CADServiceLib/CallOut_CADService/RcvIncidentCodingStatusResponse")]
        void RcvIncidentCodingStatusResponse(CallOut_Gateway.ServiceReference2.CADIncidentAck codingstatusresponse);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CallOut_CADServiceChannel : CallOut_Gateway.ServiceReference2.CallOut_CADService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CallOut_CADServiceClient : System.ServiceModel.DuplexClientBase<CallOut_Gateway.ServiceReference2.CallOut_CADService>, CallOut_Gateway.ServiceReference2.CallOut_CADService {
        
        public CallOut_CADServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CallOut_CADServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CallOut_CADServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CallOut_CADServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CallOut_CADServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void CADJoin() {
            base.Channel.CADJoin();
        }
        
        public System.Threading.Tasks.Task CADJoinAsync() {
            return base.Channel.CADJoinAsync();
        }
        
        public void CADLeave() {
            base.Channel.CADLeave();
        }
        
        public System.Threading.Tasks.Task CADLeaveAsync() {
            return base.Channel.CADLeaveAsync();
        }
        
        public void GatewayJoin() {
            base.Channel.GatewayJoin();
        }
        
        public System.Threading.Tasks.Task GatewayJoinAsync() {
            return base.Channel.GatewayJoinAsync();
        }
        
        public void GatewayLeave() {
            base.Channel.GatewayLeave();
        }
        
        public System.Threading.Tasks.Task GatewayLeaveAsync() {
            return base.Channel.GatewayLeaveAsync();
        }
        
        public void SendCADIncidentMsg(CallOut_Gateway.ServiceReference2.DispatchedIncident CADincidentmsg) {
            base.Channel.SendCADIncidentMsg(CADincidentmsg);
        }
        
        public System.Threading.Tasks.Task SendCADIncidentMsgAsync(CallOut_Gateway.ServiceReference2.DispatchedIncident CADincidentmsg) {
            return base.Channel.SendCADIncidentMsgAsync(CADincidentmsg);
        }
        
        public void AckCADIncidentMsg(CallOut_Gateway.ServiceReference2.CADIncidentAck CADincidentack) {
            base.Channel.AckCADIncidentMsg(CADincidentack);
        }
        
        public System.Threading.Tasks.Task AckCADIncidentMsgAsync(CallOut_Gateway.ServiceReference2.CADIncidentAck CADincidentack) {
            return base.Channel.AckCADIncidentMsgAsync(CADincidentack);
        }
        
        public void BroadcastIncidentCodingStatus(CallOut_Gateway.ServiceReference2.CADIncidentCodingStatus incidentcodingstatus) {
            base.Channel.BroadcastIncidentCodingStatus(incidentcodingstatus);
        }
        
        public System.Threading.Tasks.Task BroadcastIncidentCodingStatusAsync(CallOut_Gateway.ServiceReference2.CADIncidentCodingStatus incidentcodingstatus) {
            return base.Channel.BroadcastIncidentCodingStatusAsync(incidentcodingstatus);
        }
        
        public void IncidentCodingStatusQuery(string querycodingID) {
            base.Channel.IncidentCodingStatusQuery(querycodingID);
        }
        
        public System.Threading.Tasks.Task IncidentCodingStatusQueryAsync(string querycodingID) {
            return base.Channel.IncidentCodingStatusQueryAsync(querycodingID);
        }
        
        public void IncidentCodingStatusResponse(CallOut_Gateway.ServiceReference2.CADIncidentAck codingstatusresponse) {
            base.Channel.IncidentCodingStatusResponse(codingstatusresponse);
        }
        
        public System.Threading.Tasks.Task IncidentCodingStatusResponseAsync(CallOut_Gateway.ServiceReference2.CADIncidentAck codingstatusresponse) {
            return base.Channel.IncidentCodingStatusResponseAsync(codingstatusresponse);
        }
        
        public void IncidentDispatched(CallOut_Gateway.ServiceReference2.DispatchedIncident incident) {
            base.Channel.IncidentDispatched(incident);
        }
        
        public System.Threading.Tasks.Task IncidentDispatchedAsync(CallOut_Gateway.ServiceReference2.DispatchedIncident incident) {
            return base.Channel.IncidentDispatchedAsync(incident);
        }
    }
}
